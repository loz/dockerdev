#!/bin/bash -e

cmd=$1

usage() {
  echo "$0 - Usage"
  echo " - build   - build the image"
  echo " - run      - run a command in image"
  echo " - start    - start the app"
  echo " - stop     - stop the app"
  echo " - respin   - stop, build, start"
}

image_name() {
  path=`pwd`
  echo `basename $path`
}

app_devmount_args() {
  if [ -e .dexrc ]; then
    vol=$(cat .dexrc | grep dev_mount | awk '{$1=""; print $0}' | sed -e 's/^ *//' -e 's/ *$//')
    cwd=$(pwd)
    echo "-v ${cwd}:${vol}"
  fi
}

app_default_args() {
  if [ -e .dexrc ]; then
    args=$(cat .dexrc | grep default_args | awk '{$1=""; print $0}')
    echo $args
  fi
}

cmd_build() {
  image=$(image_name)
  echo "Building image for <${image}>"
  docker build -t $image .
}

cmd_start() {
  args=$(app_default_args)
  image=$(image_name)
  echo "Running <${image}>"
  run_cmd="docker run -d --name $image ${args} $image"
  echo "Running $run_cmd"
  $run_cmd
}

cmd_stop() {
  image=$(image_name)
  echo "Stopping <${image}>"
  docker stop $image
  echo "Cleaning up"
  docker rm $image
}

cmd_run() {
  args="$(app_default_args) $(app_devmount_args)"
  image=$(image_name)
  run_cmd="docker run --rm -ti ${args} ${image} $*"
  echo "Running $run_cmd"
  $run_cmd
}

case $1 in
  run)
    command=${*:2}
    cmd_run $command
    ;;
  build)
    cmd_build
    ;;
  start)
    cmd_start
    ;;
  stop)
    cmd_stop
    ;;
  respin)
    cmd_stop
    cmd_build
    cmd_start
    ;;
  *)
    usage
    ;;
esac
